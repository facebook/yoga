"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGPaddingTest.html
"""
import pytest
import yoga


def test_padding_no_size():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_padding(yoga.EDGE_LEFT, 10)
    root.set_padding(yoga.EDGE_TOP, 10)
    root.set_padding(yoga.EDGE_RIGHT, 10)
    root.set_padding(yoga.EDGE_BOTTOM, 10)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 20
    assert root.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 20
    assert root.get_computed_height() == 20


def test_padding_container_match_child():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_padding(yoga.EDGE_LEFT, 10)
    root.set_padding(yoga.EDGE_TOP, 10)
    root.set_padding(yoga.EDGE_RIGHT, 10)
    root.set_padding(yoga.EDGE_BOTTOM, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 30
    assert root.get_computed_height() == 30

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 30
    assert root.get_computed_height() == 30

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10


def test_padding_flex_child():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_padding(yoga.EDGE_LEFT, 10)
    root.set_padding(yoga.EDGE_TOP, 10)
    root.set_padding(yoga.EDGE_RIGHT, 10)
    root.set_padding(yoga.EDGE_BOTTOM, 10)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 80

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 80


def test_padding_stretch_child():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_padding(yoga.EDGE_LEFT, 10)
    root.set_padding(yoga.EDGE_TOP, 10)
    root.set_padding(yoga.EDGE_RIGHT, 10)
    root.set_padding(yoga.EDGE_BOTTOM, 10)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 80
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 80
    assert root_child0.get_computed_height() == 10


def test_padding_center_child():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_padding(yoga.EDGE_START, 10)
    root.set_padding(yoga.EDGE_END, 20)
    root.set_padding(yoga.EDGE_BOTTOM, 20)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 40
    assert root_child0.get_computed_top() == 35
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 50
    assert root_child0.get_computed_top() == 35
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10


def test_child_with_padding_align_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_FLEX_END)
    root.set_align_items(yoga.ALIGN_FLEX_END)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_padding(yoga.EDGE_LEFT, 20)
    root_child0.set_padding(yoga.EDGE_TOP, 20)
    root_child0.set_padding(yoga.EDGE_RIGHT, 20)
    root_child0.set_padding(yoga.EDGE_BOTTOM, 20)
    root_child0.set_width(100)
    root_child0.set_height(100)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 100
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 100
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

