"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGJustifyContentTest.html
"""
import pytest
import yoga


def test_justify_content_row_flex_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 10
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 92
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 82
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 72
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102


def test_justify_content_row_flex_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_FLEX_END)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 72
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 82
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 92
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 20
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 10
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102


def test_justify_content_row_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 36
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 46
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 56
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 56
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 46
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 36
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102


def test_justify_content_row_space_between():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_SPACE_BETWEEN)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 46
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 92
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 92
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 46
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102


def test_justify_content_row_space_around():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_SPACE_AROUND)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 12
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 46
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 80
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 102

    assert root_child1.get_computed_left() == 46
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 102

    assert root_child2.get_computed_left() == 12
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 102


def test_justify_content_column_flex_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 10
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 20
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 10
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 20
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10


def test_justify_content_column_flex_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_FLEX_END)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 72
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 82
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 92
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 72
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 82
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 92
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10


def test_justify_content_column_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 36
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 46
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 56
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 36
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 46
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 56
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10


def test_justify_content_column_space_between():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_SPACE_BETWEEN)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 46
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 92
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 46
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 92
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10


def test_justify_content_column_space_around():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_SPACE_AROUND)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 12
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 46
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 80
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 12
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 46
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 80
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10


def test_justify_content_row_min_width_and_margin():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_margin(yoga.EDGE_LEFT, 100)
    root.set_min_width(50)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 100
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 50
    assert root.get_computed_height() == 20

    assert root_child0.get_computed_left() == 15
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 100
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 50
    assert root.get_computed_height() == 20

    assert root_child0.get_computed_left() == 15
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20


def test_justify_content_row_max_width_and_margin():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_margin(yoga.EDGE_LEFT, 100)
    root.set_width(100)
    root.set_max_width(80)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 100
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 20

    assert root_child0.get_computed_left() == 30
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 100
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 20

    assert root_child0.get_computed_left() == 30
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20


def test_justify_content_column_min_height_and_margin():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_margin(yoga.EDGE_TOP, 100)
    root.set_min_height(50)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 100
    assert root.get_computed_width() == 20
    assert root.get_computed_height() == 50

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 15
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 100
    assert root.get_computed_width() == 20
    assert root.get_computed_height() == 50

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 15
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20


def test_justify_content_colunn_max_height_and_margin():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_margin(yoga.EDGE_TOP, 100)
    root.set_height(100)
    root.set_max_height(80)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 100
    assert root.get_computed_width() == 20
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 30
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 100
    assert root.get_computed_width() == 20
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 30
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20


def test_justify_content_column_space_evenly():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_SPACE_EVENLY)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 18
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 46
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 74
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 18
    assert root_child0.get_computed_width() == 102
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 46
    assert root_child1.get_computed_width() == 102
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 74
    assert root_child2.get_computed_width() == 102
    assert root_child2.get_computed_height() == 10


def test_justify_content_row_space_evenly():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_SPACE_EVENLY)
    root.set_width(102)
    root.set_height(102)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 26
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 51
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 0
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 77
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 0
    assert root_child2.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 102
    assert root.get_computed_height() == 102

    assert root_child0.get_computed_left() == 77
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 51
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 0
    assert root_child1.get_computed_height() == 10

    assert root_child2.get_computed_left() == 26
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 0
    assert root_child2.get_computed_height() == 10


def test_justify_content_min_width_with_padding_child_width_greater_than_parent():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_content(yoga.ALIGN_STRETCH)
    root.set_width(1000)
    root.set_height(1584)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_align_content(yoga.ALIGN_STRETCH)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0_child0.set_justify_content(yoga.JUSTIFY_CENTER)
    root_child0_child0.set_align_content(yoga.ALIGN_STRETCH)
    root_child0_child0.set_padding(yoga.EDGE_LEFT, 100)
    root_child0_child0.set_padding(yoga.EDGE_RIGHT, 100)
    root_child0_child0.set_min_width(400)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child0_child0 = yoga.Node(config)
    root_child0_child0_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0_child0_child0.set_align_content(yoga.ALIGN_STRETCH)
    root_child0_child0_child0.set_width(300)
    root_child0_child0_child0.set_height(100)
    root_child0_child0.insert_child(root_child0_child0_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 1000
    assert root.get_computed_height() == 1584

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 1000
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 500
    assert root_child0_child0.get_computed_height() == 100

    assert root_child0_child0_child0.get_computed_left() == 100
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 300
    assert root_child0_child0_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 1000
    assert root.get_computed_height() == 1584

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 1000
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 500
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 500
    assert root_child0_child0.get_computed_height() == 100

    assert root_child0_child0_child0.get_computed_left() == 100
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 300
    assert root_child0_child0_child0.get_computed_height() == 100


def test_justify_content_min_width_with_padding_child_width_lower_than_parent():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_content(yoga.ALIGN_STRETCH)
    root.set_width(1080)
    root.set_height(1584)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_align_content(yoga.ALIGN_STRETCH)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0_child0.set_justify_content(yoga.JUSTIFY_CENTER)
    root_child0_child0.set_align_content(yoga.ALIGN_STRETCH)
    root_child0_child0.set_padding(yoga.EDGE_LEFT, 100)
    root_child0_child0.set_padding(yoga.EDGE_RIGHT, 100)
    root_child0_child0.set_min_width(400)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child0_child0 = yoga.Node(config)
    root_child0_child0_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0_child0_child0.set_align_content(yoga.ALIGN_STRETCH)
    root_child0_child0_child0.set_width(199)
    root_child0_child0_child0.set_height(100)
    root_child0_child0.insert_child(root_child0_child0_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 1080
    assert root.get_computed_height() == 1584

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 1080
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 400
    assert root_child0_child0.get_computed_height() == 100

    assert root_child0_child0_child0.get_computed_left() == 101
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 199
    assert root_child0_child0_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 1080
    assert root.get_computed_height() == 1584

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 1080
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 680
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 400
    assert root_child0_child0.get_computed_height() == 100

    assert root_child0_child0_child0.get_computed_left() == 101
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 199
    assert root_child0_child0_child0.get_computed_height() == 100

