"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGMinMaxDimensionTest.html
"""
import pytest
import yoga


def test_max_width():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_max_width(50)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 50
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 10


def test_max_height():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root_child0.set_max_height(50)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 90
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 50


def test_justify_content_min_max():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(100)
    root.set_min_height(100)
    root.set_max_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_width(60)
    root_child0.set_height(60)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 20
    assert root_child0.get_computed_width() == 60
    assert root_child0.get_computed_height() == 60

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 40
    assert root_child0.get_computed_top() == 20
    assert root_child0.get_computed_width() == 60
    assert root_child0.get_computed_height() == 60


def test_align_items_min_max():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_min_width(100)
    root.set_max_width(200)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(60)
    root_child0.set_height(60)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 20
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 60
    assert root_child0.get_computed_height() == 60

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 20
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 60
    assert root_child0.get_computed_height() == 60


def test_justify_content_overflow_min_max():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_min_height(100)
    root.set_max_height(110)

    root_child0 = yoga.Node(config)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(50)
    root_child2.set_height(50)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 50
    assert root.get_computed_height() == 110

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == -20
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 30
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 80
    assert root_child2.get_computed_width() == 50
    assert root_child2.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 50
    assert root.get_computed_height() == 110

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == -20
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 30
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 80
    assert root_child2.get_computed_width() == 50
    assert root_child2.get_computed_height() == 50


def test_flex_grow_to_min():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_min_height(100)
    root.set_max_height(500)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_shrink(1)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 50


def test_flex_grow_in_at_most_container():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_items(yoga.ALIGN_FLEX_START)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_grow(1)
    root_child0_child0.set_flex_basis(0)
    root_child0.insert_child(root_child0_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 0

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 0
    assert root_child0_child0.get_computed_height() == 0

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 0

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 0
    assert root_child0_child0.get_computed_height() == 0


def test_flex_grow_child():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_basis(0)
    root_child0.set_height(100)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 100


def test_flex_grow_within_constrained_min_max_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_min_height(100)
    root.set_max_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 0
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 0
    assert root_child1.get_computed_height() == 50


def test_flex_grow_within_max_width():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(200)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_max_width(100)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_grow(1)
    root_child0_child0.set_height(20)
    root_child0.insert_child(root_child0_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 20

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 20

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 20


def test_flex_grow_within_constrained_max_width():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(200)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_max_width(300)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_grow(1)
    root_child0_child0.set_height(20)
    root_child0.insert_child(root_child0_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 200
    assert root_child0.get_computed_height() == 20

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 200
    assert root_child0_child0.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 200
    assert root_child0.get_computed_height() == 20

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 200
    assert root_child0_child0.get_computed_height() == 20


def test_flex_root_ignored():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_grow(1)
    root.set_width(100)
    root.set_min_height(100)
    root.set_max_height(500)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_basis(200)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(100)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 300

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 200

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 200
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 300

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 200

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 200
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 100


def test_flex_grow_root_minimized():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_min_height(100)
    root.set_max_height(500)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_min_height(100)
    root_child0.set_max_height(500)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_grow(1)
    root_child0_child0.set_flex_basis(200)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_height(100)
    root_child0.insert_child(root_child0_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 300

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 300

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 200

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 200
    assert root_child0_child1.get_computed_width() == 100
    assert root_child0_child1.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 300

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 300

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 200

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 200
    assert root_child0_child1.get_computed_width() == 100
    assert root_child0_child1.get_computed_height() == 100


def test_flex_grow_height_maximized():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(500)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_min_height(100)
    root_child0.set_max_height(500)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_grow(1)
    root_child0_child0.set_flex_basis(200)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_height(100)
    root_child0.insert_child(root_child0_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 500

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 400

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 400
    assert root_child0_child1.get_computed_width() == 100
    assert root_child0_child1.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 500

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 400

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 400
    assert root_child0_child1.get_computed_width() == 100
    assert root_child0_child1.get_computed_height() == 100


def test_flex_grow_within_constrained_min_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_min_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 50
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 100


def test_flex_grow_within_constrained_min_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_min_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 0
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 0
    assert root_child1.get_computed_height() == 50


def test_flex_grow_within_constrained_max_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(200)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_max_width(100)
    root_child0.set_height(100)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_shrink(1)
    root_child0_child0.set_flex_basis(100)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_width(50)
    root_child0.insert_child(root_child0_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 50
    assert root_child0_child0.get_computed_height() == 100

    assert root_child0_child1.get_computed_left() == 50
    assert root_child0_child1.get_computed_top() == 0
    assert root_child0_child1.get_computed_width() == 50
    assert root_child0_child1.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 50
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 50
    assert root_child0_child0.get_computed_height() == 100

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 0
    assert root_child0_child1.get_computed_width() == 50
    assert root_child0_child1.get_computed_height() == 100


def test_flex_grow_within_constrained_max_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_max_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_shrink(1)
    root_child0.set_flex_basis(100)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 50


def test_child_min_max_width_flexing():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(120)
    root.set_height(50)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_basis(0)
    root_child0.set_min_width(60)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_flex_basis_percent(50)
    root_child1.set_max_width(20)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 120
    assert root.get_computed_height() == 50

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 100
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 120
    assert root.get_computed_height() == 50

    assert root_child0.get_computed_left() == 20
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 50


def test_min_width_overrides_width():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(50)
    root.set_min_width(100)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 0

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 0


def test_max_width_overrides_width():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(200)
    root.set_max_width(100)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 0

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 0


def test_min_height_overrides_height():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_height(50)
    root.set_min_height(100)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100


def test_max_height_overrides_height():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_height(200)
    root.set_max_height(100)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 0
    assert root.get_computed_height() == 100


def test_min_max_percent_no_width_height():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_FLEX_START)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_min_width_percent(10)
    root_child0.set_max_width_percent(10)
    root_child0.set_min_height_percent(10)
    root_child0.set_max_height_percent(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 90
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10

