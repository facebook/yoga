"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGSizeOverflowTest.html
"""
import pytest
import yoga


def test_nested_overflowing_child():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_width(200)
    root_child0_child0.set_height(200)
    root_child0.insert_child(root_child0_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 200

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 200
    assert root_child0_child0.get_computed_height() == 200

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 200

    assert root_child0_child0.get_computed_left() == -100
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 200
    assert root_child0_child0.get_computed_height() == 200


def test_nested_overflowing_child_in_constraint_parent():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(100)
    root_child0.set_height(100)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_width(200)
    root_child0_child0.set_height(200)
    root_child0.insert_child(root_child0_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 200
    assert root_child0_child0.get_computed_height() == 200

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == -100
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 200
    assert root_child0_child0.get_computed_height() == 200


def test_parent_wrap_child_size_overflowing_parent():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(100)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_width(100)
    root_child0_child0.set_height(200)
    root_child0.insert_child(root_child0_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 200

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 200

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 200

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 200

