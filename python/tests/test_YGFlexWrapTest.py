"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGFlexWrapTest.html
"""
import pytest
import yoga


def test_wrap_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(30)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(30)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(30)
    root.insert_child(root_child3, 3)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 60
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 30

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 30
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 30

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 60
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 30
    assert root_child3.get_computed_top() == 0
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 30

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 60
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 30
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 30

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 30
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 30

    assert root_child2.get_computed_left() == 30
    assert root_child2.get_computed_top() == 60
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 0
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 30


def test_wrap_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(30)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(30)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(30)
    root.insert_child(root_child3, 3)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 60

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 30

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 30

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 30
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 30

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 60

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 30

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 30

    assert root_child2.get_computed_left() == 10
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 70
    assert root_child3.get_computed_top() == 30
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 30


def test_wrap_row_align_items_flex_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_items(yoga.ALIGN_FLEX_END)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(30)
    root.insert_child(root_child3, 3)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 60

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 20
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 10
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 30
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 30

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 60

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 20
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 10
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 10
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 70
    assert root_child3.get_computed_top() == 30
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 30


def test_wrap_row_align_items_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(30)
    root.insert_child(root_child3, 3)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 60

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 5
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 30
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 30

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 60

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 5
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 10
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 70
    assert root_child3.get_computed_top() == 30
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 30


def test_flex_wrap_children_with_min_main_overriding_flex_basis():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_basis(50)
    root_child0.set_min_width(55)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_basis(50)
    root_child1.set_min_width(55)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 55
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 55
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 45
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 55
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 45
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 55
    assert root_child1.get_computed_height() == 50


def test_flex_wrap_wrap_to_child_height():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_align_items(yoga.ALIGN_FLEX_START)
    root_child0.set_flex_wrap(yoga.WRAP_WRAP)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_width(100)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child0_child0 = yoga.Node(config)
    root_child0_child0_child0.set_width(100)
    root_child0_child0_child0.set_height(100)
    root_child0_child0.insert_child(root_child0_child0_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(100)
    root_child1.set_height(100)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 100

    assert root_child0_child0_child0.get_computed_left() == 0
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 100
    assert root_child0_child0_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 100
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 100
    assert root_child0_child0.get_computed_height() == 100

    assert root_child0_child0_child0.get_computed_left() == 0
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 100
    assert root_child0_child0_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 100
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 100


def test_flex_wrap_align_stretch_fits_one_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(150)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 150
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 0

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 0

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 150
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 0

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 0


def test_wrap_reverse_row_align_content_flex_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_flex_wrap(yoga.WRAP_WRAP_REVERSE)
    root.set_width(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(40)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(30)
    root_child4.set_height(50)
    root.insert_child(root_child4, 4)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 70
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 60
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 70
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 60
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 10
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 70
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 40
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50


def test_wrap_reverse_row_align_content_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_CENTER)
    root.set_flex_wrap(yoga.WRAP_WRAP_REVERSE)
    root.set_width(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(40)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(30)
    root_child4.set_height(50)
    root.insert_child(root_child4, 4)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 70
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 60
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 70
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 60
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 10
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 70
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 40
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50


def test_wrap_reverse_row_single_line_different_size():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_flex_wrap(yoga.WRAP_WRAP_REVERSE)
    root.set_width(300)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(40)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(30)
    root_child4.set_height(50)
    root.insert_child(root_child4, 4)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 300
    assert root.get_computed_height() == 50

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 40
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 30
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 20
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 90
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 120
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 300
    assert root.get_computed_height() == 50

    assert root_child0.get_computed_left() == 270
    assert root_child0.get_computed_top() == 40
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 240
    assert root_child1.get_computed_top() == 30
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 210
    assert root_child2.get_computed_top() == 20
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 180
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 150
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50


def test_wrap_reverse_row_align_content_stretch():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_STRETCH)
    root.set_flex_wrap(yoga.WRAP_WRAP_REVERSE)
    root.set_width(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(40)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(30)
    root_child4.set_height(50)
    root.insert_child(root_child4, 4)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 70
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 60
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 70
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 60
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 10
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 70
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 40
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50


def test_wrap_reverse_row_align_content_space_around():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_SPACE_AROUND)
    root.set_flex_wrap(yoga.WRAP_WRAP_REVERSE)
    root.set_width(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(40)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(30)
    root_child4.set_height(50)
    root.insert_child(root_child4, 4)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 70
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 60
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 70
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 60
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 10
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 70
    assert root_child3.get_computed_top() == 10
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 40
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50


def test_wrap_reverse_column_fixed_size():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_flex_wrap(yoga.WRAP_WRAP_REVERSE)
    root.set_width(200)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_width(30)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(30)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(30)
    root_child3.set_height(40)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(30)
    root_child4.set_height(50)
    root.insert_child(root_child4, 4)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 170
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 170
    assert root_child1.get_computed_top() == 10
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 170
    assert root_child2.get_computed_top() == 30
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 170
    assert root_child3.get_computed_top() == 60
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 140
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 30
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 10
    assert root_child1.get_computed_width() == 30
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 30
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 30

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 60
    assert root_child3.get_computed_width() == 30
    assert root_child3.get_computed_height() == 40

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 30
    assert root_child4.get_computed_height() == 50


def test_wrapped_row_within_align_items_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_flex_wrap(yoga.WRAP_WRAP)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_width(150)
    root_child0_child0.set_height(80)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_width(80)
    root_child0_child1.set_height(80)
    root_child0.insert_child(root_child0_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 200
    assert root_child0.get_computed_height() == 160

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 150
    assert root_child0_child0.get_computed_height() == 80

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 80
    assert root_child0_child1.get_computed_width() == 80
    assert root_child0_child1.get_computed_height() == 80

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 200
    assert root_child0.get_computed_height() == 160

    assert root_child0_child0.get_computed_left() == 50
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 150
    assert root_child0_child0.get_computed_height() == 80

    assert root_child0_child1.get_computed_left() == 120
    assert root_child0_child1.get_computed_top() == 80
    assert root_child0_child1.get_computed_width() == 80
    assert root_child0_child1.get_computed_height() == 80


def test_wrapped_row_within_align_items_flex_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_FLEX_START)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_flex_wrap(yoga.WRAP_WRAP)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_width(150)
    root_child0_child0.set_height(80)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_width(80)
    root_child0_child1.set_height(80)
    root_child0.insert_child(root_child0_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 200
    assert root_child0.get_computed_height() == 160

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 150
    assert root_child0_child0.get_computed_height() == 80

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 80
    assert root_child0_child1.get_computed_width() == 80
    assert root_child0_child1.get_computed_height() == 80

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 200
    assert root_child0.get_computed_height() == 160

    assert root_child0_child0.get_computed_left() == 50
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 150
    assert root_child0_child0.get_computed_height() == 80

    assert root_child0_child1.get_computed_left() == 120
    assert root_child0_child1.get_computed_top() == 80
    assert root_child0_child1.get_computed_width() == 80
    assert root_child0_child1.get_computed_height() == 80


def test_wrapped_row_within_align_items_flex_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_FLEX_END)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_flex_wrap(yoga.WRAP_WRAP)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_width(150)
    root_child0_child0.set_height(80)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_width(80)
    root_child0_child1.set_height(80)
    root_child0.insert_child(root_child0_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 200
    assert root_child0.get_computed_height() == 160

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 150
    assert root_child0_child0.get_computed_height() == 80

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 80
    assert root_child0_child1.get_computed_width() == 80
    assert root_child0_child1.get_computed_height() == 80

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 200
    assert root_child0.get_computed_height() == 160

    assert root_child0_child0.get_computed_left() == 50
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 150
    assert root_child0_child0.get_computed_height() == 80

    assert root_child0_child1.get_computed_left() == 120
    assert root_child0_child1.get_computed_top() == 80
    assert root_child0_child1.get_computed_width() == 80
    assert root_child0_child1.get_computed_height() == 80


def test_wrapped_column_max_height():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_align_content(yoga.ALIGN_CENTER)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(700)
    root.set_height(500)

    root_child0 = yoga.Node(config)
    root_child0.set_width(100)
    root_child0.set_height(500)
    root_child0.set_max_height(200)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_margin(yoga.EDGE_LEFT, 20)
    root_child1.set_margin(yoga.EDGE_TOP, 20)
    root_child1.set_margin(yoga.EDGE_RIGHT, 20)
    root_child1.set_margin(yoga.EDGE_BOTTOM, 20)
    root_child1.set_width(200)
    root_child1.set_height(200)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(100)
    root_child2.set_height(100)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 700
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 250
    assert root_child0.get_computed_top() == 30
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 200

    assert root_child1.get_computed_left() == 200
    assert root_child1.get_computed_top() == 250
    assert root_child1.get_computed_width() == 200
    assert root_child1.get_computed_height() == 200

    assert root_child2.get_computed_left() == 420
    assert root_child2.get_computed_top() == 200
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 700
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 350
    assert root_child0.get_computed_top() == 30
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 200

    assert root_child1.get_computed_left() == 300
    assert root_child1.get_computed_top() == 250
    assert root_child1.get_computed_width() == 200
    assert root_child1.get_computed_height() == 200

    assert root_child2.get_computed_left() == 180
    assert root_child2.get_computed_top() == 200
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 100


def test_wrapped_column_max_height_flex():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_align_content(yoga.ALIGN_CENTER)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(700)
    root.set_height(500)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_shrink(1)
    root_child0.set_flex_basis_percent(0)
    root_child0.set_width(100)
    root_child0.set_height(500)
    root_child0.set_max_height(200)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_flex_shrink(1)
    root_child1.set_flex_basis_percent(0)
    root_child1.set_margin(yoga.EDGE_LEFT, 20)
    root_child1.set_margin(yoga.EDGE_TOP, 20)
    root_child1.set_margin(yoga.EDGE_RIGHT, 20)
    root_child1.set_margin(yoga.EDGE_BOTTOM, 20)
    root_child1.set_width(200)
    root_child1.set_height(200)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(100)
    root_child2.set_height(100)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 700
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 300
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 180

    assert root_child1.get_computed_left() == 250
    assert root_child1.get_computed_top() == 200
    assert root_child1.get_computed_width() == 200
    assert root_child1.get_computed_height() == 180

    assert root_child2.get_computed_left() == 300
    assert root_child2.get_computed_top() == 400
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 700
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 300
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 180

    assert root_child1.get_computed_left() == 250
    assert root_child1.get_computed_top() == 200
    assert root_child1.get_computed_width() == 200
    assert root_child1.get_computed_height() == 180

    assert root_child2.get_computed_left() == 300
    assert root_child2.get_computed_top() == 400
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 100


def test_wrap_nodes_with_content_sizing_overflowing_margin():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(500)
    root.set_height(500)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_flex_wrap(yoga.WRAP_WRAP)
    root_child0.set_width(85)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child0_child0 = yoga.Node(config)
    root_child0_child0_child0.set_width(40)
    root_child0_child0_child0.set_height(40)
    root_child0_child0.insert_child(root_child0_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_margin(yoga.EDGE_RIGHT, 10)
    root_child0.insert_child(root_child0_child1, 1)

    root_child0_child1_child0 = yoga.Node(config)
    root_child0_child1_child0.set_width(40)
    root_child0_child1_child0.set_height(40)
    root_child0_child1.insert_child(root_child0_child1_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 500
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 85
    assert root_child0.get_computed_height() == 80

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 40
    assert root_child0_child0.get_computed_height() == 40

    assert root_child0_child0_child0.get_computed_left() == 0
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 40
    assert root_child0_child0_child0.get_computed_height() == 40

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 40
    assert root_child0_child1.get_computed_width() == 40
    assert root_child0_child1.get_computed_height() == 40

    assert root_child0_child1_child0.get_computed_left() == 0
    assert root_child0_child1_child0.get_computed_top() == 0
    assert root_child0_child1_child0.get_computed_width() == 40
    assert root_child0_child1_child0.get_computed_height() == 40

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 500
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 415
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 85
    assert root_child0.get_computed_height() == 80

    assert root_child0_child0.get_computed_left() == 45
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 40
    assert root_child0_child0.get_computed_height() == 40

    assert root_child0_child0_child0.get_computed_left() == 0
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 40
    assert root_child0_child0_child0.get_computed_height() == 40

    assert root_child0_child1.get_computed_left() == 35
    assert root_child0_child1.get_computed_top() == 40
    assert root_child0_child1.get_computed_width() == 40
    assert root_child0_child1.get_computed_height() == 40

    assert root_child0_child1_child0.get_computed_left() == 0
    assert root_child0_child1_child0.get_computed_top() == 0
    assert root_child0_child1_child0.get_computed_width() == 40
    assert root_child0_child1_child0.get_computed_height() == 40


def test_wrap_nodes_with_content_sizing_margin_cross():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(500)
    root.set_height(500)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root_child0.set_flex_wrap(yoga.WRAP_WRAP)
    root_child0.set_width(70)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child0_child0 = yoga.Node(config)
    root_child0_child0_child0.set_width(40)
    root_child0_child0_child0.set_height(40)
    root_child0_child0.insert_child(root_child0_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_margin(yoga.EDGE_TOP, 10)
    root_child0.insert_child(root_child0_child1, 1)

    root_child0_child1_child0 = yoga.Node(config)
    root_child0_child1_child0.set_width(40)
    root_child0_child1_child0.set_height(40)
    root_child0_child1.insert_child(root_child0_child1_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 500
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 70
    assert root_child0.get_computed_height() == 90

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 40
    assert root_child0_child0.get_computed_height() == 40

    assert root_child0_child0_child0.get_computed_left() == 0
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 40
    assert root_child0_child0_child0.get_computed_height() == 40

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 50
    assert root_child0_child1.get_computed_width() == 40
    assert root_child0_child1.get_computed_height() == 40

    assert root_child0_child1_child0.get_computed_left() == 0
    assert root_child0_child1_child0.get_computed_top() == 0
    assert root_child0_child1_child0.get_computed_width() == 40
    assert root_child0_child1_child0.get_computed_height() == 40

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 500
    assert root.get_computed_height() == 500

    assert root_child0.get_computed_left() == 430
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 70
    assert root_child0.get_computed_height() == 90

    assert root_child0_child0.get_computed_left() == 30
    assert root_child0_child0.get_computed_top() == 0
    assert root_child0_child0.get_computed_width() == 40
    assert root_child0_child0.get_computed_height() == 40

    assert root_child0_child0_child0.get_computed_left() == 0
    assert root_child0_child0_child0.get_computed_top() == 0
    assert root_child0_child0_child0.get_computed_width() == 40
    assert root_child0_child0_child0.get_computed_height() == 40

    assert root_child0_child1.get_computed_left() == 30
    assert root_child0_child1.get_computed_top() == 50
    assert root_child0_child1.get_computed_width() == 40
    assert root_child0_child1.get_computed_height() == 40

    assert root_child0_child1_child0.get_computed_left() == 0
    assert root_child0_child1_child0.get_computed_top() == 0
    assert root_child0_child1_child0.get_computed_width() == 40
    assert root_child0_child1_child0.get_computed_height() == 40

