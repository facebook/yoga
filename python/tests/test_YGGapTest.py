"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGGapTest.html
"""
import pytest
import yoga


def test_column_gap_flexible():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(80)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_shrink(1)
    root_child0.set_flex_basis_percent(0)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_flex_shrink(1)
    root_child1.set_flex_basis_percent(0)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_flex_shrink(1)
    root_child2.set_flex_basis_percent(0)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 60
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_inflexible():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(80)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 60
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_mixed_flexible():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(80)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_flex_shrink(1)
    root_child1.set_flex_basis_percent(0)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 60
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_child_margins():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(80)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_shrink(1)
    root_child0.set_flex_basis_percent(0)
    root_child0.set_margin(yoga.EDGE_LEFT, 2)
    root_child0.set_margin(yoga.EDGE_RIGHT, 2)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_flex_shrink(1)
    root_child1.set_flex_basis_percent(0)
    root_child1.set_margin(yoga.EDGE_LEFT, 10)
    root_child1.set_margin(yoga.EDGE_RIGHT, 10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_flex_shrink(1)
    root_child2.set_flex_basis_percent(0)
    root_child2.set_margin(yoga.EDGE_LEFT, 15)
    root_child2.set_margin(yoga.EDGE_RIGHT, 15)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 2
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 2
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 26
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 2
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 63
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 2
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 76
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 2
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 52
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 2
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 15
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 2
    assert root_child2.get_computed_height() == 100


def test_column_row_gap_wrapping():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(80)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root_child2.set_height(20)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(20)
    root_child3.set_height(20)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(20)
    root_child4.set_height(20)
    root.insert_child(root_child4, 4)

    root_child5 = yoga.Node(config)
    root_child5.set_width(20)
    root_child5.set_height(20)
    root.insert_child(root_child5, 5)

    root_child6 = yoga.Node(config)
    root_child6.set_width(20)
    root_child6.set_height(20)
    root.insert_child(root_child6, 6)

    root_child7 = yoga.Node(config)
    root_child7.set_width(20)
    root_child7.set_height(20)
    root.insert_child(root_child7, 7)

    root_child8 = yoga.Node(config)
    root_child8.set_width(20)
    root_child8.set_height(20)
    root.insert_child(root_child8, 8)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 40
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 40
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 60
    assert root_child5.get_computed_top() == 40
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20

    assert root_child6.get_computed_left() == 0
    assert root_child6.get_computed_top() == 80
    assert root_child6.get_computed_width() == 20
    assert root_child6.get_computed_height() == 20

    assert root_child7.get_computed_left() == 30
    assert root_child7.get_computed_top() == 80
    assert root_child7.get_computed_width() == 20
    assert root_child7.get_computed_height() == 20

    assert root_child8.get_computed_left() == 60
    assert root_child8.get_computed_top() == 80
    assert root_child8.get_computed_width() == 20
    assert root_child8.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 60
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 60
    assert root_child3.get_computed_top() == 40
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 40
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 0
    assert root_child5.get_computed_top() == 40
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20

    assert root_child6.get_computed_left() == 60
    assert root_child6.get_computed_top() == 80
    assert root_child6.get_computed_width() == 20
    assert root_child6.get_computed_height() == 20

    assert root_child7.get_computed_left() == 30
    assert root_child7.get_computed_top() == 80
    assert root_child7.get_computed_width() == 20
    assert root_child7.get_computed_height() == 20

    assert root_child8.get_computed_left() == 0
    assert root_child8.get_computed_top() == 80
    assert root_child8.get_computed_width() == 20
    assert root_child8.get_computed_height() == 20


def test_column_gap_justify_flex_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_justify_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 70
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 10
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_justify_flex_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_FLEX_END)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 20
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 80
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 60
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_justify_space_between():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_SPACE_BETWEEN)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 80
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_justify_space_around():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_SPACE_AROUND)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 3
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 77
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 77
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 3
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_justify_space_evenly():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_SPACE_EVENLY)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 5
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 75
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 5
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 100


def test_column_gap_wrap_align_flex_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root_child2.set_height(20)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(20)
    root_child3.set_height(20)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(20)
    root_child4.set_height(20)
    root.insert_child(root_child4, 4)

    root_child5 = yoga.Node(config)
    root_child5.set_width(20)
    root_child5.set_height(20)
    root.insert_child(root_child5, 5)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 40
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 40
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 60
    assert root_child5.get_computed_top() == 40
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 80
    assert root_child3.get_computed_top() == 40
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 50
    assert root_child4.get_computed_top() == 40
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 20
    assert root_child5.get_computed_top() == 40
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20


def test_column_gap_wrap_align_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_CENTER)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root_child2.set_height(20)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(20)
    root_child3.set_height(20)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(20)
    root_child4.set_height(20)
    root.insert_child(root_child4, 4)

    root_child5 = yoga.Node(config)
    root_child5.set_width(20)
    root_child5.set_height(20)
    root.insert_child(root_child5, 5)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 20
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 20
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 20
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 60
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 60
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 60
    assert root_child5.get_computed_top() == 60
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 20
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 20
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 20
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 80
    assert root_child3.get_computed_top() == 60
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 50
    assert root_child4.get_computed_top() == 60
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 20
    assert root_child5.get_computed_top() == 60
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20


def test_column_gap_wrap_align_flex_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_FLEX_END)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root_child2.set_height(20)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(20)
    root_child3.set_height(20)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(20)
    root_child4.set_height(20)
    root.insert_child(root_child4, 4)

    root_child5 = yoga.Node(config)
    root_child5.set_width(20)
    root_child5.set_height(20)
    root.insert_child(root_child5, 5)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 40
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 40
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 40
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 80
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 80
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 60
    assert root_child5.get_computed_top() == 80
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 40
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 40
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 40
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 80
    assert root_child3.get_computed_top() == 80
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 50
    assert root_child4.get_computed_top() == 80
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 20
    assert root_child5.get_computed_top() == 80
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20


def test_column_gap_wrap_align_space_between():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_SPACE_BETWEEN)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root_child2.set_height(20)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(20)
    root_child3.set_height(20)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(20)
    root_child4.set_height(20)
    root.insert_child(root_child4, 4)

    root_child5 = yoga.Node(config)
    root_child5.set_width(20)
    root_child5.set_height(20)
    root.insert_child(root_child5, 5)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 80
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 80
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 60
    assert root_child5.get_computed_top() == 80
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 80
    assert root_child3.get_computed_top() == 80
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 50
    assert root_child4.get_computed_top() == 80
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 20
    assert root_child5.get_computed_top() == 80
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20


def test_column_gap_wrap_align_space_around():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_SPACE_AROUND)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root_child2.set_height(20)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(20)
    root_child3.set_height(20)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(20)
    root_child4.set_height(20)
    root.insert_child(root_child4, 4)

    root_child5 = yoga.Node(config)
    root_child5.set_width(20)
    root_child5.set_height(20)
    root.insert_child(root_child5, 5)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 10
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 10
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 70
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 70
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 60
    assert root_child5.get_computed_top() == 70
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 20

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 10
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 10
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 20

    assert root_child3.get_computed_left() == 80
    assert root_child3.get_computed_top() == 70
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 20

    assert root_child4.get_computed_left() == 50
    assert root_child4.get_computed_top() == 70
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 20

    assert root_child5.get_computed_left() == 20
    assert root_child5.get_computed_top() == 70
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 20


def test_column_gap_wrap_align_stretch():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_STRETCH)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(300)
    root.set_height(300)
    root.set_gap(yoga.GUTTER_COLUMN, 5)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_min_width(60)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_min_width(60)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_min_width(60)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_flex_grow(1)
    root_child3.set_min_width(60)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_flex_grow(1)
    root_child4.set_min_width(60)
    root.insert_child(root_child4, 4)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 300
    assert root.get_computed_height() == 300

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 71
    assert root_child0.get_computed_height() == 150

    assert root_child1.get_computed_left() == 76
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 72
    assert root_child1.get_computed_height() == 150

    assert root_child2.get_computed_left() == 153
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 71
    assert root_child2.get_computed_height() == 150

    assert root_child3.get_computed_left() == 229
    assert root_child3.get_computed_top() == 0
    assert root_child3.get_computed_width() == 71
    assert root_child3.get_computed_height() == 150

    assert root_child4.get_computed_left() == 0
    assert root_child4.get_computed_top() == 150
    assert root_child4.get_computed_width() == 300
    assert root_child4.get_computed_height() == 150

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 300
    assert root.get_computed_height() == 300

    assert root_child0.get_computed_left() == 229
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 71
    assert root_child0.get_computed_height() == 150

    assert root_child1.get_computed_left() == 153
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 71
    assert root_child1.get_computed_height() == 150

    assert root_child2.get_computed_left() == 76
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 72
    assert root_child2.get_computed_height() == 150

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 0
    assert root_child3.get_computed_width() == 71
    assert root_child3.get_computed_height() == 150

    assert root_child4.get_computed_left() == 0
    assert root_child4.get_computed_top() == 150
    assert root_child4.get_computed_width() == 300
    assert root_child4.get_computed_height() == 150


def test_column_gap_determines_parent_width():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_height(100)
    root.set_gap(yoga.GUTTER_COLUMN, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(30)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 20
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 50
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 80
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 70
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 30
    assert root_child2.get_computed_height() == 100


def test_row_gap_align_items_stretch():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_content(yoga.ALIGN_STRETCH)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)
    root.set_height(200)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(20)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(20)
    root.insert_child(root_child4, 4)

    root_child5 = yoga.Node(config)
    root_child5.set_width(20)
    root.insert_child(root_child5, 5)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 90

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 90

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 90

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 110
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 90

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 110
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 90

    assert root_child5.get_computed_left() == 60
    assert root_child5.get_computed_top() == 110
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 90

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 90

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 90

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 90

    assert root_child3.get_computed_left() == 80
    assert root_child3.get_computed_top() == 110
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 90

    assert root_child4.get_computed_left() == 50
    assert root_child4.get_computed_top() == 110
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 90

    assert root_child5.get_computed_left() == 20
    assert root_child5.get_computed_top() == 110
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 90


def test_row_gap_align_items_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_items(yoga.ALIGN_FLEX_END)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)
    root.set_height(200)
    root.set_gap(yoga.GUTTER_COLUMN, 10)
    root.set_gap(yoga.GUTTER_ROW, 20)

    root_child0 = yoga.Node(config)
    root_child0.set_width(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(20)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_width(20)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_width(20)
    root.insert_child(root_child4, 4)

    root_child5 = yoga.Node(config)
    root_child5.set_width(20)
    root.insert_child(root_child5, 5)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 0

    assert root_child1.get_computed_left() == 30
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 0

    assert root_child2.get_computed_left() == 60
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 0

    assert root_child3.get_computed_left() == 0
    assert root_child3.get_computed_top() == 20
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 0

    assert root_child4.get_computed_left() == 30
    assert root_child4.get_computed_top() == 20
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 0

    assert root_child5.get_computed_left() == 60
    assert root_child5.get_computed_top() == 20
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 0

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 20
    assert root_child0.get_computed_height() == 0

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 20
    assert root_child1.get_computed_height() == 0

    assert root_child2.get_computed_left() == 20
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 20
    assert root_child2.get_computed_height() == 0

    assert root_child3.get_computed_left() == 80
    assert root_child3.get_computed_top() == 20
    assert root_child3.get_computed_width() == 20
    assert root_child3.get_computed_height() == 0

    assert root_child4.get_computed_left() == 50
    assert root_child4.get_computed_top() == 20
    assert root_child4.get_computed_width() == 20
    assert root_child4.get_computed_height() == 0

    assert root_child5.get_computed_left() == 20
    assert root_child5.get_computed_top() == 20
    assert root_child5.get_computed_width() == 20
    assert root_child5.get_computed_height() == 0


def test_row_gap_column_child_margins():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(200)
    root.set_gap(yoga.GUTTER_ROW, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_shrink(1)
    root_child0.set_flex_basis_percent(0)
    root_child0.set_margin(yoga.EDGE_TOP, 2)
    root_child0.set_margin(yoga.EDGE_BOTTOM, 2)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_flex_shrink(1)
    root_child1.set_flex_basis_percent(0)
    root_child1.set_margin(yoga.EDGE_TOP, 10)
    root_child1.set_margin(yoga.EDGE_BOTTOM, 10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_flex_shrink(1)
    root_child2.set_flex_basis_percent(0)
    root_child2.set_margin(yoga.EDGE_TOP, 15)
    root_child2.set_margin(yoga.EDGE_BOTTOM, 15)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 2
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 42

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 66
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 42

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 143
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 42

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 2
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 42

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 66
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 42

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 143
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 42


def test_row_gap_row_wrap_child_margins():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_flex_wrap(yoga.WRAP_WRAP)
    root.set_width(100)
    root.set_height(200)
    root.set_gap(yoga.GUTTER_ROW, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_margin(yoga.EDGE_TOP, 2)
    root_child0.set_margin(yoga.EDGE_BOTTOM, 2)
    root_child0.set_width(60)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_margin(yoga.EDGE_TOP, 10)
    root_child1.set_margin(yoga.EDGE_BOTTOM, 10)
    root_child1.set_width(60)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_margin(yoga.EDGE_TOP, 15)
    root_child2.set_margin(yoga.EDGE_BOTTOM, 15)
    root_child2.set_width(60)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 2
    assert root_child0.get_computed_width() == 60
    assert root_child0.get_computed_height() == 0

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 24
    assert root_child1.get_computed_width() == 60
    assert root_child1.get_computed_height() == 0

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 59
    assert root_child2.get_computed_width() == 60
    assert root_child2.get_computed_height() == 0

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 40
    assert root_child0.get_computed_top() == 2
    assert root_child0.get_computed_width() == 60
    assert root_child0.get_computed_height() == 0

    assert root_child1.get_computed_left() == 40
    assert root_child1.get_computed_top() == 24
    assert root_child1.get_computed_width() == 60
    assert root_child1.get_computed_height() == 0

    assert root_child2.get_computed_left() == 40
    assert root_child2.get_computed_top() == 59
    assert root_child2.get_computed_width() == 60
    assert root_child2.get_computed_height() == 0


def test_row_gap_determines_parent_height():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_gap(yoga.GUTTER_ROW, 10)

    root_child0 = yoga.Node(config)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_height(30)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 20
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 30

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 80

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 20
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 20

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 50
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 30

