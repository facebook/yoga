"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGMarginTest.html
"""
import pytest
import yoga


def test_margin_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_margin(yoga.EDGE_START, 10)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 100


def test_margin_top():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_margin(yoga.EDGE_TOP, 10)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 10


def test_margin_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_justify_content(yoga.JUSTIFY_FLEX_END)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_margin(yoga.EDGE_END, 10)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 80
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 100


def test_margin_bottom():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_FLEX_END)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_margin(yoga.EDGE_BOTTOM, 10)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 80
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 80
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 10


def test_margin_and_flex_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_margin(yoga.EDGE_START, 10)
    root_child0.set_margin(yoga.EDGE_END, 10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 80
    assert root_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 80
    assert root_child0.get_computed_height() == 100


def test_margin_and_flex_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_margin(yoga.EDGE_TOP, 10)
    root_child0.set_margin(yoga.EDGE_BOTTOM, 10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 80

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 80


def test_margin_and_stretch_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_margin(yoga.EDGE_TOP, 10)
    root_child0.set_margin(yoga.EDGE_BOTTOM, 10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 80

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 10
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 80


def test_margin_and_stretch_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_margin(yoga.EDGE_START, 10)
    root_child0.set_margin(yoga.EDGE_END, 10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 80
    assert root_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 80
    assert root_child0.get_computed_height() == 100


def test_margin_with_sibling_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_margin(yoga.EDGE_END, 10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 45
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 55
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 45
    assert root_child1.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 55
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 45
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 45
    assert root_child1.get_computed_height() == 100


def test_margin_with_sibling_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_margin(yoga.EDGE_BOTTOM, 10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 45

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 55
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 45

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 45

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 55
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 45


def test_margin_auto_bottom():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_BOTTOM)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_top():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_TOP)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 100
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 100
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_bottom_and_top():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_TOP)
    root_child0.set_margin_auto(yoga.EDGE_BOTTOM)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 50
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 50
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_bottom_and_top_justify_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_TOP)
    root_child0.set_margin_auto(yoga.EDGE_BOTTOM)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 50
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 150
    assert root_child0.get_computed_top() == 50
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 150
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_mutiple_children_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_TOP)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_margin_auto(yoga.EDGE_TOP)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(50)
    root_child2.set_height(50)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 25
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 100
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    assert root_child2.get_computed_left() == 75
    assert root_child2.get_computed_top() == 150
    assert root_child2.get_computed_width() == 50
    assert root_child2.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 25
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 100
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    assert root_child2.get_computed_left() == 75
    assert root_child2.get_computed_top() == 150
    assert root_child2.get_computed_width() == 50
    assert root_child2.get_computed_height() == 50


def test_margin_auto_mutiple_children_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_RIGHT)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_margin_auto(yoga.EDGE_RIGHT)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_width(50)
    root_child2.set_height(50)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 75
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 75
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    assert root_child2.get_computed_left() == 150
    assert root_child2.get_computed_top() == 75
    assert root_child2.get_computed_width() == 50
    assert root_child2.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 125
    assert root_child0.get_computed_top() == 75
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 75
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 75
    assert root_child2.get_computed_width() == 50
    assert root_child2.get_computed_height() == 50


def test_margin_auto_left_and_right_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root_child0.set_margin_auto(yoga.EDGE_RIGHT)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 50
    assert root_child0.get_computed_top() == 75
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 150
    assert root_child1.get_computed_top() == 75
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 75
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 75
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_left_and_right():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root_child0.set_margin_auto(yoga.EDGE_RIGHT)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 150
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_start_and_end_column():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_START)
    root_child0.set_margin_auto(yoga.EDGE_END)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 50
    assert root_child0.get_computed_top() == 75
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 150
    assert root_child1.get_computed_top() == 75
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 75
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 75
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_start_and_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_START)
    root_child0.set_margin_auto(yoga.EDGE_END)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 150
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_left_and_right_column_and_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root_child0.set_margin_auto(yoga.EDGE_RIGHT)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 75
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_left():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 150
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 150
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_right():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_RIGHT)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 50
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_left_and_right_stretch():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root_child0.set_margin_auto(yoga.EDGE_RIGHT)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 50
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 150
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_top_and_bottom_stretch():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_TOP)
    root_child0.set_margin_auto(yoga.EDGE_BOTTOM)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 50
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 150
    assert root_child0.get_computed_top() == 50
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 150
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_should_not_be_part_of_max_height():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(250)
    root.set_height(250)

    root_child0 = yoga.Node(config)
    root_child0.set_margin(yoga.EDGE_TOP, 20)
    root_child0.set_width(100)
    root_child0.set_height(100)
    root_child0.set_max_height(100)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 250
    assert root.get_computed_height() == 250

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 20
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 250
    assert root.get_computed_height() == 250

    assert root_child0.get_computed_left() == 150
    assert root_child0.get_computed_top() == 20
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100


def test_margin_should_not_be_part_of_max_width():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(250)
    root.set_height(250)

    root_child0 = yoga.Node(config)
    root_child0.set_margin(yoga.EDGE_LEFT, 20)
    root_child0.set_width(100)
    root_child0.set_max_width(100)
    root_child0.set_height(100)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 250
    assert root.get_computed_height() == 250

    assert root_child0.get_computed_left() == 20
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 250
    assert root.get_computed_height() == 250

    assert root_child0.get_computed_left() == 150
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 100


def test_margin_auto_left_right_child_bigger_than_parent():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(52)
    root.set_height(52)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root_child0.set_margin_auto(yoga.EDGE_RIGHT)
    root_child0.set_width(72)
    root_child0.set_height(72)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 52
    assert root.get_computed_height() == 52

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == -10
    assert root_child0.get_computed_width() == 72
    assert root_child0.get_computed_height() == 72

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 52
    assert root.get_computed_height() == 52

    assert root_child0.get_computed_left() == -20
    assert root_child0.get_computed_top() == -10
    assert root_child0.get_computed_width() == 72
    assert root_child0.get_computed_height() == 72


def test_margin_auto_left_child_bigger_than_parent():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(52)
    root.set_height(52)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root_child0.set_width(72)
    root_child0.set_height(72)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 52
    assert root.get_computed_height() == 52

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == -10
    assert root_child0.get_computed_width() == 72
    assert root_child0.get_computed_height() == 72

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 52
    assert root.get_computed_height() == 52

    assert root_child0.get_computed_left() == -20
    assert root_child0.get_computed_top() == -10
    assert root_child0.get_computed_width() == 72
    assert root_child0.get_computed_height() == 72


def test_margin_fix_left_auto_right_child_bigger_than_parent():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(52)
    root.set_height(52)

    root_child0 = yoga.Node(config)
    root_child0.set_margin(yoga.EDGE_LEFT, 10)
    root_child0.set_margin_auto(yoga.EDGE_RIGHT)
    root_child0.set_width(72)
    root_child0.set_height(72)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 52
    assert root.get_computed_height() == 52

    assert root_child0.get_computed_left() == 10
    assert root_child0.get_computed_top() == -10
    assert root_child0.get_computed_width() == 72
    assert root_child0.get_computed_height() == 72

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 52
    assert root.get_computed_height() == 52

    assert root_child0.get_computed_left() == -20
    assert root_child0.get_computed_top() == -10
    assert root_child0.get_computed_width() == 72
    assert root_child0.get_computed_height() == 72


def test_margin_auto_left_fix_right_child_bigger_than_parent():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_justify_content(yoga.JUSTIFY_CENTER)
    root.set_width(52)
    root.set_height(52)

    root_child0 = yoga.Node(config)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root_child0.set_margin(yoga.EDGE_RIGHT, 10)
    root_child0.set_width(72)
    root_child0.set_height(72)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 52
    assert root.get_computed_height() == 52

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == -10
    assert root_child0.get_computed_width() == 72
    assert root_child0.get_computed_height() == 72

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 52
    assert root.get_computed_height() == 52

    assert root_child0.get_computed_left() == -30
    assert root_child0.get_computed_top() == -10
    assert root_child0.get_computed_width() == 72
    assert root_child0.get_computed_height() == 72


def test_margin_auto_top_stretching_child():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_shrink(1)
    root_child0.set_flex_basis_percent(0)
    root_child0.set_margin_auto(yoga.EDGE_TOP)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 150

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 100
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 150

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50


def test_margin_auto_left_stretching_child():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_CENTER)
    root.set_width(200)
    root.set_height(200)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_shrink(1)
    root_child0.set_flex_basis_percent(0)
    root_child0.set_margin_auto(yoga.EDGE_LEFT)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_width(50)
    root_child1.set_height(50)
    root.insert_child(root_child1, 1)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 200
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 150

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 200
    assert root.get_computed_height() == 200

    assert root_child0.get_computed_left() == 200
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 0
    assert root_child0.get_computed_height() == 150

    assert root_child1.get_computed_left() == 75
    assert root_child1.get_computed_top() == 150
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 50

