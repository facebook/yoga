"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGAlignSelfTest.html
"""
import pytest
import yoga


def test_align_self_center():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_align_self(yoga.ALIGN_CENTER)
    root_child0.set_width(10)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 45
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 45
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10


def test_align_self_flex_end():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_align_self(yoga.ALIGN_FLEX_END)
    root_child0.set_width(10)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 90
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10


def test_align_self_flex_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_align_self(yoga.ALIGN_FLEX_START)
    root_child0.set_width(10)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 90
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10


def test_align_self_flex_end_override_flex_start():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_align_items(yoga.ALIGN_FLEX_START)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_align_self(yoga.ALIGN_FLEX_END)
    root_child0.set_width(10)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 90
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 10


def test_align_self_baseline():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_align_self(yoga.ALIGN_BASELINE)
    root_child0.set_width(50)
    root_child0.set_height(50)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_align_self(yoga.ALIGN_BASELINE)
    root_child1.set_width(50)
    root_child1.set_height(20)
    root.insert_child(root_child1, 1)

    root_child1_child0 = yoga.Node(config)
    root_child1_child0.set_width(50)
    root_child1_child0.set_height(10)
    root_child1.insert_child(root_child1_child0, 0)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 50
    assert root_child1.get_computed_top() == 40
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 20

    assert root_child1_child0.get_computed_left() == 0
    assert root_child1_child0.get_computed_top() == 0
    assert root_child1_child0.get_computed_width() == 50
    assert root_child1_child0.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 50
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 50
    assert root_child0.get_computed_height() == 50

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 40
    assert root_child1.get_computed_width() == 50
    assert root_child1.get_computed_height() == 20

    assert root_child1_child0.get_computed_left() == 0
    assert root_child1_child0.get_computed_top() == 0
    assert root_child1_child0.get_computed_width() == 50
    assert root_child1_child0.get_computed_height() == 10

