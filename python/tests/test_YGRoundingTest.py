"""
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by gentest/gentest.rb from gentest/fixtures/YGRoundingTest.html
"""
import pytest
import yoga


def test_rounding_flex_basis_flex_grow_row_width_of_100():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(100)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 33
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 33
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 34
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 67
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 33
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 67
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 33
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 33
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 34
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 33
    assert root_child2.get_computed_height() == 100


def test_rounding_flex_basis_flex_grow_row_prime_number_width():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(113)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root.insert_child(root_child2, 2)

    root_child3 = yoga.Node(config)
    root_child3.set_flex_grow(1)
    root.insert_child(root_child3, 3)

    root_child4 = yoga.Node(config)
    root_child4.set_flex_grow(1)
    root.insert_child(root_child4, 4)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 113
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 23
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 23
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 22
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 45
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 23
    assert root_child2.get_computed_height() == 100

    assert root_child3.get_computed_left() == 68
    assert root_child3.get_computed_top() == 0
    assert root_child3.get_computed_width() == 22
    assert root_child3.get_computed_height() == 100

    assert root_child4.get_computed_left() == 90
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 23
    assert root_child4.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 113
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 90
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 23
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 68
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 22
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 45
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 23
    assert root_child2.get_computed_height() == 100

    assert root_child3.get_computed_left() == 23
    assert root_child3.get_computed_top() == 0
    assert root_child3.get_computed_width() == 22
    assert root_child3.get_computed_height() == 100

    assert root_child4.get_computed_left() == 0
    assert root_child4.get_computed_top() == 0
    assert root_child4.get_computed_width() == 23
    assert root_child4.get_computed_height() == 100


def test_rounding_flex_basis_flex_shrink_row():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(101)
    root.set_height(100)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_shrink(1)
    root_child0.set_flex_basis(100)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_basis(25)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_basis(25)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 101
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 51
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 51
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 25
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 76
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 25
    assert root_child2.get_computed_height() == 100

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 101
    assert root.get_computed_height() == 100

    assert root_child0.get_computed_left() == 50
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 51
    assert root_child0.get_computed_height() == 100

    assert root_child1.get_computed_left() == 25
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 25
    assert root_child1.get_computed_height() == 100

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 25
    assert root_child2.get_computed_height() == 100


def test_rounding_flex_basis_overrides_main_size():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(113)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_basis(50)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 64

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 64
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 25

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 24

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 64

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 64
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 25

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 24


def test_rounding_total_fractial():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(87.4)
    root.set_height(113.4)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(0.7)
    root_child0.set_flex_basis(50.3)
    root_child0.set_height(20.3)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1.6)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1.1)
    root_child2.set_height(10.7)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 87
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 87
    assert root_child0.get_computed_height() == 59

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 59
    assert root_child1.get_computed_width() == 87
    assert root_child1.get_computed_height() == 30

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 87
    assert root_child2.get_computed_height() == 24

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 87
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 87
    assert root_child0.get_computed_height() == 59

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 59
    assert root_child1.get_computed_width() == 87
    assert root_child1.get_computed_height() == 30

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 87
    assert root_child2.get_computed_height() == 24


def test_rounding_total_fractial_nested():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(87.4)
    root.set_height(113.4)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(0.7)
    root_child0.set_flex_basis(50.3)
    root_child0.set_height(20.3)
    root.insert_child(root_child0, 0)

    root_child0_child0 = yoga.Node(config)
    root_child0_child0.set_flex_grow(1)
    root_child0_child0.set_flex_basis(0.3)
    root_child0_child0.set_position(yoga.EDGE_BOTTOM, 13.3)
    root_child0_child0.set_height(9.9)
    root_child0.insert_child(root_child0_child0, 0)

    root_child0_child1 = yoga.Node(config)
    root_child0_child1.set_flex_grow(4)
    root_child0_child1.set_flex_basis(0.3)
    root_child0_child1.set_position(yoga.EDGE_TOP, 13.3)
    root_child0_child1.set_height(1.1)
    root_child0.insert_child(root_child0_child1, 1)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1.6)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1.1)
    root_child2.set_height(10.7)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 87
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 87
    assert root_child0.get_computed_height() == 59

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == -13
    assert root_child0_child0.get_computed_width() == 87
    assert root_child0_child0.get_computed_height() == 12

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 25
    assert root_child0_child1.get_computed_width() == 87
    assert root_child0_child1.get_computed_height() == 47

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 59
    assert root_child1.get_computed_width() == 87
    assert root_child1.get_computed_height() == 30

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 87
    assert root_child2.get_computed_height() == 24

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 87
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 87
    assert root_child0.get_computed_height() == 59

    assert root_child0_child0.get_computed_left() == 0
    assert root_child0_child0.get_computed_top() == -13
    assert root_child0_child0.get_computed_width() == 87
    assert root_child0_child0.get_computed_height() == 12

    assert root_child0_child1.get_computed_left() == 0
    assert root_child0_child1.get_computed_top() == 25
    assert root_child0_child1.get_computed_width() == 87
    assert root_child0_child1.get_computed_height() == 47

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 59
    assert root_child1.get_computed_width() == 87
    assert root_child1.get_computed_height() == 30

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 87
    assert root_child2.get_computed_height() == 24


def test_rounding_fractial_input_1():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(113.4)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_basis(50)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 64

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 64
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 25

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 24

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 64

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 64
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 25

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 24


def test_rounding_fractial_input_2():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_width(100)
    root.set_height(113.6)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_basis(50)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 114

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 65

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 65
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 24

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 25

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 114

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 65

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 65
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 24

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 25


def test_rounding_fractial_input_3():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_position(yoga.EDGE_TOP, 0.3)
    root.set_width(100)
    root.set_height(113.4)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_basis(50)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 114

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 65

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 64
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 24

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 25

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 114

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 65

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 64
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 24

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 25


def test_rounding_fractial_input_4():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_position(yoga.EDGE_TOP, 0.7)
    root.set_width(100)
    root.set_height(113.4)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_flex_basis(50)
    root_child0.set_height(20)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 1
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 64

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 64
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 25

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 24

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 1
    assert root.get_computed_width() == 100
    assert root.get_computed_height() == 113

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 100
    assert root_child0.get_computed_height() == 64

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 64
    assert root_child1.get_computed_width() == 100
    assert root_child1.get_computed_height() == 25

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 89
    assert root_child2.get_computed_width() == 100
    assert root_child2.get_computed_height() == 24


def test_rounding_inner_node_controversy_horizontal():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(320)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_height(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_height(10)
    root.insert_child(root_child1, 1)

    root_child1_child0 = yoga.Node(config)
    root_child1_child0.set_flex_grow(1)
    root_child1_child0.set_height(10)
    root_child1.insert_child(root_child1_child0, 0)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_height(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 320
    assert root.get_computed_height() == 10

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 107
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 107
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 106
    assert root_child1.get_computed_height() == 10

    assert root_child1_child0.get_computed_left() == 0
    assert root_child1_child0.get_computed_top() == 0
    assert root_child1_child0.get_computed_width() == 106
    assert root_child1_child0.get_computed_height() == 10

    assert root_child2.get_computed_left() == 213
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 107
    assert root_child2.get_computed_height() == 10

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 320
    assert root.get_computed_height() == 10

    assert root_child0.get_computed_left() == 213
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 107
    assert root_child0.get_computed_height() == 10

    assert root_child1.get_computed_left() == 107
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 106
    assert root_child1.get_computed_height() == 10

    assert root_child1_child0.get_computed_left() == 0
    assert root_child1_child0.get_computed_top() == 0
    assert root_child1_child0.get_computed_width() == 106
    assert root_child1_child0.get_computed_height() == 10

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 107
    assert root_child2.get_computed_height() == 10


def test_rounding_inner_node_controversy_vertical():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_height(320)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_width(10)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_width(10)
    root.insert_child(root_child1, 1)

    root_child1_child0 = yoga.Node(config)
    root_child1_child0.set_flex_grow(1)
    root_child1_child0.set_width(10)
    root_child1.insert_child(root_child1_child0, 0)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_width(10)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 10
    assert root.get_computed_height() == 320

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 107

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 107
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 106

    assert root_child1_child0.get_computed_left() == 0
    assert root_child1_child0.get_computed_top() == 0
    assert root_child1_child0.get_computed_width() == 10
    assert root_child1_child0.get_computed_height() == 106

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 213
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 107

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 10
    assert root.get_computed_height() == 320

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 10
    assert root_child0.get_computed_height() == 107

    assert root_child1.get_computed_left() == 0
    assert root_child1.get_computed_top() == 107
    assert root_child1.get_computed_width() == 10
    assert root_child1.get_computed_height() == 106

    assert root_child1_child0.get_computed_left() == 0
    assert root_child1_child0.get_computed_top() == 0
    assert root_child1_child0.get_computed_width() == 10
    assert root_child1_child0.get_computed_height() == 106

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 213
    assert root_child2.get_computed_width() == 10
    assert root_child2.get_computed_height() == 107


def test_rounding_inner_node_controversy_combined():
    config = yoga.Config()

    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, True)
    config.set_experimental_feature_enabled(yoga.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, True)

    root = yoga.Node(config)
    root.set_flex_direction(yoga.FLEX_DIRECTION_ROW)
    root.set_width(640)
    root.set_height(320)

    root_child0 = yoga.Node(config)
    root_child0.set_flex_grow(1)
    root_child0.set_height_percent(100)
    root.insert_child(root_child0, 0)

    root_child1 = yoga.Node(config)
    root_child1.set_flex_grow(1)
    root_child1.set_height_percent(100)
    root.insert_child(root_child1, 1)

    root_child1_child0 = yoga.Node(config)
    root_child1_child0.set_flex_grow(1)
    root_child1_child0.set_width_percent(100)
    root_child1.insert_child(root_child1_child0, 0)

    root_child1_child1 = yoga.Node(config)
    root_child1_child1.set_flex_grow(1)
    root_child1_child1.set_width_percent(100)
    root_child1.insert_child(root_child1_child1, 1)

    root_child1_child1_child0 = yoga.Node(config)
    root_child1_child1_child0.set_flex_grow(1)
    root_child1_child1_child0.set_width_percent(100)
    root_child1_child1.insert_child(root_child1_child1_child0, 0)

    root_child1_child2 = yoga.Node(config)
    root_child1_child2.set_flex_grow(1)
    root_child1_child2.set_width_percent(100)
    root_child1.insert_child(root_child1_child2, 2)

    root_child2 = yoga.Node(config)
    root_child2.set_flex_grow(1)
    root_child2.set_height_percent(100)
    root.insert_child(root_child2, 2)
    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_LTR);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 640
    assert root.get_computed_height() == 320

    assert root_child0.get_computed_left() == 0
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 213
    assert root_child0.get_computed_height() == 320

    assert root_child1.get_computed_left() == 213
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 214
    assert root_child1.get_computed_height() == 320

    assert root_child1_child0.get_computed_left() == 0
    assert root_child1_child0.get_computed_top() == 0
    assert root_child1_child0.get_computed_width() == 214
    assert root_child1_child0.get_computed_height() == 107

    assert root_child1_child1.get_computed_left() == 0
    assert root_child1_child1.get_computed_top() == 107
    assert root_child1_child1.get_computed_width() == 214
    assert root_child1_child1.get_computed_height() == 106

    assert root_child1_child1_child0.get_computed_left() == 0
    assert root_child1_child1_child0.get_computed_top() == 0
    assert root_child1_child1_child0.get_computed_width() == 214
    assert root_child1_child1_child0.get_computed_height() == 106

    assert root_child1_child2.get_computed_left() == 0
    assert root_child1_child2.get_computed_top() == 213
    assert root_child1_child2.get_computed_width() == 214
    assert root_child1_child2.get_computed_height() == 107

    assert root_child2.get_computed_left() == 427
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 213
    assert root_child2.get_computed_height() == 320

    root.calculate_layout(float("nan"), float("nan"), yoga.DIRECTION_RTL);

    assert root.get_computed_left() == 0
    assert root.get_computed_top() == 0
    assert root.get_computed_width() == 640
    assert root.get_computed_height() == 320

    assert root_child0.get_computed_left() == 427
    assert root_child0.get_computed_top() == 0
    assert root_child0.get_computed_width() == 213
    assert root_child0.get_computed_height() == 320

    assert root_child1.get_computed_left() == 213
    assert root_child1.get_computed_top() == 0
    assert root_child1.get_computed_width() == 214
    assert root_child1.get_computed_height() == 320

    assert root_child1_child0.get_computed_left() == 0
    assert root_child1_child0.get_computed_top() == 0
    assert root_child1_child0.get_computed_width() == 214
    assert root_child1_child0.get_computed_height() == 107

    assert root_child1_child1.get_computed_left() == 0
    assert root_child1_child1.get_computed_top() == 107
    assert root_child1_child1.get_computed_width() == 214
    assert root_child1_child1.get_computed_height() == 106

    assert root_child1_child1_child0.get_computed_left() == 0
    assert root_child1_child1_child0.get_computed_top() == 0
    assert root_child1_child1_child0.get_computed_width() == 214
    assert root_child1_child1_child0.get_computed_height() == 106

    assert root_child1_child2.get_computed_left() == 0
    assert root_child1_child2.get_computed_top() == 213
    assert root_child1_child2.get_computed_width() == 214
    assert root_child1_child2.get_computed_height() == 107

    assert root_child2.get_computed_left() == 0
    assert root_child2.get_computed_top() == 0
    assert root_child2.get_computed_width() == 213
    assert root_child2.get_computed_height() == 320

